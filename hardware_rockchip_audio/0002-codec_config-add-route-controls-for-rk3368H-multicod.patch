From 52769c594d6b865f3141e78be545b01806023ce4 Mon Sep 17 00:00:00 2001
From: zhangjun <zhangjun@rock-chips.com>
Date: Fri, 12 May 2017 17:18:35 +0800
Subject: [PATCH 2/4] codec_config: add route controls for rk3368H multicodecs

Change-Id: Ie3486339b8653ada6ce58e44e6e825eebe1301a6
Signed-off-by: zhangjun <zhangjun@rock-chips.com>
Signed-off-by: tug <tug@skyth-tek.com>
---
 tinyalsa_hal/audio_hw.c                        |    6 +-
 tinyalsa_hal/codec_config/config_list.h        |    5 +
 tinyalsa_hal/codec_config/hdmi_analog_config.h |  324 ++++++++++++++++++++++++
 3 files changed, 332 insertions(+), 3 deletions(-)
 create mode 100755 tinyalsa_hal/codec_config/hdmi_analog_config.h

diff --git a/tinyalsa_hal/audio_hw.c b/tinyalsa_hal/audio_hw.c
index d810f70..0660267 100755
--- a/tinyalsa_hal/audio_hw.c
+++ b/tinyalsa_hal/audio_hw.c
@@ -299,8 +299,8 @@ unsigned getOutputRouteFromDevice(uint32_t device)
     case AUDIO_DEVICE_OUT_BLUETOOTH_SCO_HEADSET:
     case AUDIO_DEVICE_OUT_BLUETOOTH_SCO_CARKIT:
         return BLUETOOTH_NORMAL_ROUTE;
-        //case AudioSystem::DEVICE_OUT_AUX_DIGITAL:
-        //	return HDMI_NORMAL_ROUTE;
+    case AUDIO_DEVICE_OUT_AUX_DIGITAL:
+	return HDMI_NORMAL_ROUTE;
         //case AudioSystem::DEVICE_OUT_EARPIECE:
         //	return EARPIECE_NORMAL_ROUTE;
         //case AudioSystem::DEVICE_OUT_ANLG_DOCK_HEADSET:
@@ -443,7 +443,7 @@ static int read_snd_card_info(void)
             PCM_CARD_SPDIF = 0;
             PCM_CARD = 1;
         }
-    } else if (strstr(buf0, "HDMI") || strstr(buf0, "rockchiphdmi") || strstr(buf0, "rockchipcdndpfb") || strstr(buf0, "rockchipcdndpso")) {
+    } else if (strstr(buf0, "HDMI") || strstr(buf0, "rockchiphdmi") || strstr(buf0, "rockchipcdndpfb") || strstr(buf0, "rockchipcdndpso") || strstr(buf0, "rkhdmianalogsnd")) {
         PCM_CARD = 0;
         PCM_CARD_HDMI = 0;
         PCM_CARD_SPDIF = 1;
diff --git a/tinyalsa_hal/codec_config/config_list.h b/tinyalsa_hal/codec_config/config_list.h
index 9c2d07b..a537b1e 100755
--- a/tinyalsa_hal/codec_config/config_list.h
+++ b/tinyalsa_hal/codec_config/config_list.h
@@ -24,6 +24,7 @@
 #include "rt5651_config.h"
 #include "es8316_config.h"
 #include "cx2072_config.h"
+#include "hdmi_analog_config.h"
 
 struct alsa_sound_card_config
 {
@@ -88,6 +89,10 @@ struct alsa_sound_card_config sound_card_config_list[] = {
     {
         .sound_card_name = "rockchipcx2072x",
         .route_table = &cx2072_config_table,
+    },
+    {
+        .sound_card_name = "rkhdmianalogsnd",
+        .route_table = &hdmi_analog_config_table,
     }
 };
 
diff --git a/tinyalsa_hal/codec_config/hdmi_analog_config.h b/tinyalsa_hal/codec_config/hdmi_analog_config.h
new file mode 100755
index 0000000..73483e4
--- /dev/null
+++ b/tinyalsa_hal/codec_config/hdmi_analog_config.h
@@ -0,0 +1,324 @@
+#ifndef _HDMI_ANALOG_CONFIG_H_
+#define _HDMI_ANALOG_CONFIG_H_
+
+#include "config.h"
+
+const struct config_control hdmi_analog_speaker_normal_controls[] = {
+	{
+		.ctl_name = "DAC Playback Volume",
+		.int_val = {192, 192},
+	},
+};
+
+const struct config_control hdmi_analog_speaker_incall_controls[] = {
+};
+
+const struct config_control hdmi_analog_speaker_ringtone_controls[] = {
+};
+
+const struct config_control hdmi_analog_speaker_voip_controls[] = {
+};
+
+const struct config_control hdmi_analog_earpiece_normal_controls[] = {
+};
+
+const struct config_control hdmi_analog_earpiece_incall_controls[] = {
+};
+
+const struct config_control hdmi_analog_earpiece_ringtone_controls[] = {
+};
+
+const struct config_control hdmi_analog_earpiece_voip_controls[] = {
+};
+
+const struct config_control hdmi_analog_headphone_normal_controls[] = {
+	{
+		.ctl_name = "DAC Playback Volume",
+		.int_val = {192, 192},
+	},
+};
+
+const struct config_control hdmi_analog_hdmi_normal_controls[] = {
+	{
+		.ctl_name = "DAC Playback Volume",
+		.int_val = {0, 0},
+	},
+};
+
+const struct config_control hdmi_analog_headphone_incall_controls[] = {
+};
+
+const struct config_control hdmi_analog_headphone_ringtone_controls[] = {
+};
+
+const struct config_control hdmi_analog_speaker_headphone_normal_controls[] = {
+};
+
+const struct config_control hdmi_analog_speaker_headphone_ringtone_controls[] = {
+};
+
+const struct config_control hdmi_analog_headphone_voip_controls[] = {
+};
+
+const struct config_control hdmi_analog_headset_normal_controls[] = {
+};
+
+const struct config_control hdmi_analog_headset_incall_controls[] = {
+};
+
+const struct config_control hdmi_analog_headset_ringtone_controls[] = {
+};
+
+const struct config_control hdmi_analog_headset_voip_controls[] = {
+};
+
+const struct config_control hdmi_analog_bluetooth_normal_controls[] = {
+};
+
+const struct config_control hdmi_analog_bluetooth_incall_controls[] = {
+};
+
+const struct config_control hdmi_analog_bluetooth_voip_controls[] = {
+};
+
+const struct config_control hdmi_analog_main_mic_capture_controls[] = {
+    {
+        .ctl_name = "Differential Mux",
+        .int_val = {0},
+    },
+};
+
+const struct config_control hdmi_analog_hands_free_mic_capture_controls[] = {
+    {
+        .ctl_name = "Differential Mux",
+        .int_val = {1},
+    },
+};
+
+const struct config_control hdmi_analog_bluetooth_sco_mic_capture_controls[] = {
+};
+
+const struct config_control hdmi_analog_playback_off_controls[] = {
+};
+
+const struct config_control hdmi_analog_capture_off_controls[] = {
+};
+
+const struct config_control hdmi_analog_incall_off_controls[] = {
+};
+
+const struct config_control hdmi_analog_voip_off_controls[] = {
+};
+
+const struct config_route_table hdmi_analog_config_table = {
+    //speaker
+    .speaker_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_speaker_normal_controls,
+        .controls_count = sizeof(hdmi_analog_speaker_normal_controls) / sizeof(struct config_control),
+    },
+    .speaker_incall = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_speaker_incall_controls,
+        .controls_count = sizeof(hdmi_analog_speaker_incall_controls) / sizeof(struct config_control),
+    },
+    .speaker_ringtone = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_speaker_ringtone_controls,
+        .controls_count = sizeof(hdmi_analog_speaker_ringtone_controls) / sizeof(struct config_control),
+    },
+    .speaker_voip = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_speaker_voip_controls,
+        .controls_count = sizeof(hdmi_analog_speaker_voip_controls) / sizeof(struct config_control),
+    },
+
+    //earpiece
+    .earpiece_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_earpiece_normal_controls,
+        .controls_count = sizeof(hdmi_analog_earpiece_normal_controls) / sizeof(struct config_control),
+    },
+    .earpiece_incall = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_earpiece_incall_controls,
+        .controls_count = sizeof(hdmi_analog_earpiece_incall_controls) / sizeof(struct config_control),
+    },
+    .earpiece_ringtone = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_earpiece_ringtone_controls,
+        .controls_count = sizeof(hdmi_analog_earpiece_ringtone_controls) / sizeof(struct config_control),
+    },
+    .earpiece_voip = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_earpiece_voip_controls,
+        .controls_count = sizeof(hdmi_analog_earpiece_voip_controls) / sizeof(struct config_control),
+    },
+
+    //headphone
+    .headphone_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headphone_normal_controls,
+        .controls_count = sizeof(hdmi_analog_headphone_normal_controls) / sizeof(struct config_control),
+    },
+    .headphone_incall = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headphone_incall_controls,
+        .controls_count = sizeof(hdmi_analog_headphone_incall_controls) / sizeof(struct config_control),
+    },
+    .headphone_ringtone = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headphone_ringtone_controls,
+        .controls_count = sizeof(hdmi_analog_headphone_ringtone_controls) / sizeof(struct config_control),
+    },
+    .speaker_headphone_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_speaker_headphone_normal_controls,
+        .controls_count = sizeof(hdmi_analog_speaker_headphone_normal_controls) / sizeof(struct config_control),
+    },
+    .speaker_headphone_ringtone = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_speaker_headphone_ringtone_controls,
+        .controls_count = sizeof(hdmi_analog_speaker_headphone_ringtone_controls) / sizeof(struct config_control),
+    },
+    .headphone_voip = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headphone_voip_controls,
+        .controls_count = sizeof(hdmi_analog_headphone_voip_controls) / sizeof(struct config_control),
+    },
+
+    //headset
+    .headset_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headset_normal_controls,
+        .controls_count = sizeof(hdmi_analog_headset_normal_controls) / sizeof(struct config_control),
+    },
+    .headset_incall = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headset_incall_controls,
+        .controls_count = sizeof(hdmi_analog_headset_incall_controls) / sizeof(struct config_control),
+    },
+    .headset_ringtone = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headset_ringtone_controls,
+        .controls_count = sizeof(hdmi_analog_headset_ringtone_controls) / sizeof(struct config_control),
+    },
+    .headset_voip = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_headset_voip_controls,
+        .controls_count = sizeof(hdmi_analog_headset_voip_controls) / sizeof(struct config_control),
+    },
+
+    //bluetooth
+    .bluetooth_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_bluetooth_normal_controls,
+        .controls_count = sizeof(hdmi_analog_bluetooth_normal_controls) / sizeof(struct config_control),
+    },
+    .bluetooth_incall = {
+        .sound_card = 0,
+        .devices = DEVICES_0_1,
+        .controls = hdmi_analog_bluetooth_incall_controls,
+        .controls_count = sizeof(hdmi_analog_bluetooth_incall_controls) / sizeof(struct config_control),
+    },
+    .bluetooth_voip = {
+        .sound_card = 0,
+        .devices = DEVICES_0_1,
+        .controls = hdmi_analog_bluetooth_voip_controls,
+        .controls_count = sizeof(hdmi_analog_bluetooth_voip_controls) / sizeof(struct config_control),
+    },
+
+    //capture
+    .main_mic_capture = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_main_mic_capture_controls,
+        .controls_count = sizeof(hdmi_analog_main_mic_capture_controls) / sizeof(struct config_control),
+    },
+    .hands_free_mic_capture = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_hands_free_mic_capture_controls,
+        .controls_count = sizeof(hdmi_analog_hands_free_mic_capture_controls) / sizeof(struct config_control),
+    },
+    .bluetooth_sco_mic_capture = {
+        .sound_card = 0,
+        .devices = DEVICES_0_1,
+        .controls = hdmi_analog_bluetooth_sco_mic_capture_controls,
+        .controls_count = sizeof(hdmi_analog_bluetooth_sco_mic_capture_controls) / sizeof(struct config_control),
+    },
+
+    //off
+    .playback_off = {
+        .controls = hdmi_analog_playback_off_controls,
+        .controls_count = sizeof(hdmi_analog_playback_off_controls) / sizeof(struct config_control),
+    },
+    .capture_off = {
+        .controls = hdmi_analog_capture_off_controls,
+        .controls_count = sizeof(hdmi_analog_capture_off_controls) / sizeof(struct config_control),
+    },
+    .incall_off = {
+        .controls = hdmi_analog_incall_off_controls,
+        .controls_count = sizeof(hdmi_analog_incall_off_controls) / sizeof(struct config_control),
+    },
+    .voip_off = {
+        .controls = hdmi_analog_voip_off_controls,
+        .controls_count = sizeof(hdmi_analog_voip_off_controls) / sizeof(struct config_control),
+    },
+#ifdef BOX_HAL
+    //hdmi
+    .hdmi_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls_count = 0,
+    },
+#else
+    //hdmi
+    .hdmi_normal = {
+        .sound_card = 0,
+        .devices = DEVICES_0,
+        .controls = hdmi_analog_hdmi_normal_controls,
+        .controls_count = sizeof(hdmi_analog_hdmi_normal_controls) / sizeof(struct config_control),
+    },
+#endif
+    //spdif
+    .spdif_normal = {
+        .sound_card = 1,
+        .devices = DEVICES_0,
+        .controls_count = 0,
+    },
+
+    //usb audio
+    .usb_normal = {
+        .sound_card = 2,
+        .devices = DEVICES_0,
+        .controls_count = 0,
+    },
+    .usb_capture = {
+        .sound_card = 2,
+        .devices = DEVICES_0,
+        .controls_count = 0,
+    },
+};
+
+
+#endif //_HDMI_ANALOG_CONFIG_H_
-- 
1.7.9.5

