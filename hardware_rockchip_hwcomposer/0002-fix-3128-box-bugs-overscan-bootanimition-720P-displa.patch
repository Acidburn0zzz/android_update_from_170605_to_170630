From 89d22725c0bd99720d158658e3b740a41bfcfa12 Mon Sep 17 00:00:00 2001
From: huangds <hds@rock-chips.com>
Date: Fri, 2 Jun 2017 10:37:26 +0800
Subject: [PATCH 02/13] fix 3128 box bugs:overscan,bootanimition ,720P display
 err

Change-Id: Ia7a3f13d00f57d5f22c63c5d2d08c678c6c6e3dd

Signed-off-by: tug <tug@skyth-tek.com>
---
 rk_hwcomposer.cpp      |   45 +++++++++++++--
 rk_hwcomposer.h        |    7 ++-
 rk_hwcomposer_hdmi.cpp |  148 ------------------------------------------------
 3 files changed, 46 insertions(+), 154 deletions(-)
 delete mode 100755 rk_hwcomposer_hdmi.cpp

diff --git a/rk_hwcomposer.cpp b/rk_hwcomposer.cpp
index eee244b..0a57724 100755
--- a/rk_hwcomposer.cpp
+++ b/rk_hwcomposer.cpp
@@ -1081,6 +1081,13 @@ int try_prepare_first(hwcContext * ctx,hwc_display_contents_1_t *list)
 {
     int hwc_en; 
     int static cnt = 0;
+    unsigned int lpersent = 0;
+    unsigned int tpersent = 0;
+    unsigned int rpersent = 0;
+    unsigned int bpersent = 0;
+
+    char new_valuep[PROPERTY_VALUE_MAX];
+    
     ctx->videoCnt = 0;
     ctx->Is_video = false;
     ctx->Is_Lvideo = false;
@@ -1096,6 +1103,15 @@ int try_prepare_first(hwcContext * ctx,hwc_display_contents_1_t *list)
             ALOGW("boot cnt =%d ",cnt);
         return -1;
     }
+    property_get("persist.sys.overscan.main", new_valuep, "false");
+
+    sscanf(new_valuep,"overscan %d,%d,%d,%d",&lpersent,&tpersent,&rpersent,&bpersent);
+
+    if(lpersent != 100 || tpersent != 100 )  
+        ctx->Is_OverscanEn = true;
+    else
+        ctx->Is_OverscanEn = false;
+
     for (unsigned int i = 0; i < (list->numHwLayers - 1); i++)
     {
         hwc_layer_1_t * layer = &list->hwLayers[i];
@@ -1203,6 +1219,15 @@ int try_prepare_first(hwcContext * ctx,hwc_display_contents_1_t *list)
     return 0;
 }
 
+int is_need_skip_this_policy(void*ctx)
+{
+    hwcContext * context = (hwcContext *)ctx;
+    if(context->IsRk3128 && context->Is_OverscanEn && context->mScreenChanged)
+    {
+        return 1;
+    }
+    return 0;
+}
 int try_hwc_vop_policy(void * ctx,hwc_display_contents_1_t *list)
 {
     int scale_cnt = 0;
@@ -1216,8 +1241,9 @@ int try_hwc_vop_policy(void * ctx,hwc_display_contents_1_t *list)
         return -1;
     }
 #endif
+    if(is_need_skip_this_policy(ctx))
+        return -1;
     forceSkip = context->IsRk3126;
-
     if(context->IsRk3188 && ONLY_USE_ONE_VOP == 1)
         forceSkip = true;
 
@@ -1345,7 +1371,7 @@ int try_hwc_rga_policy(void * ctx,hwc_display_contents_1_t *list)
     }
     if(context->hasPlaneAlpha)
     {
-	if(is_out_log())
+	    if(is_out_log())
             ALOGD("Hwc rga policy out,line=%d",__LINE__);
         return -1;
     }
@@ -1427,7 +1453,8 @@ int try_hwc_rga_vop_policy(void * ctx,hwc_display_contents_1_t *list)
         return -1;
     }
 #endif
-
+    if(is_need_skip_this_policy(ctx))
+        return -1;
     if(context->engine_fd <= 0)
     {
         if(is_out_log())
@@ -1543,7 +1570,9 @@ int try_hwc_rga_trfm_vop_policy(void * ctx,hwc_display_contents_1_t *list)
     unsigned int i ;
     hwcContext * context = (hwcContext *)ctx;
     int yuv_cnt = 0;
-    
+
+    if(is_need_skip_this_policy(ctx))
+        return -1;
    // RGA_POLICY_MAX_SIZE
 #if ONLY_USE_ONE_VOP
     if(getHdmiMode() == 1)
@@ -1688,6 +1717,8 @@ int try_hwc_rga_trfm_gpu_vop_policy(void * ctx,hwc_display_contents_1_t *list)
     }
 #endif
 
+    if(is_need_skip_this_policy(ctx))
+        return -1;
     if(context->engine_fd <= 0)
     {
         if(is_out_log())
@@ -1912,6 +1943,8 @@ int try_hwc_vop_gpu_policy(void * ctx,hwc_display_contents_1_t *list)
     unsigned int i ;
 
     hwcContext * context = (hwcContext *)ctx;
+    if(is_need_skip_this_policy(ctx))
+        return -1;
 #ifdef USE_X86
     if(getHdmiMode() == 1)
     {
@@ -2278,6 +2311,8 @@ int try_hwc_gpu_nodraw_vop_policy(void * ctx,hwc_display_contents_1_t *list)
 
     forceSkip = context->IsRk3126;
 
+    if(is_need_skip_this_policy(ctx))
+        return -1;
     if(context->IsRk3188 && ONLY_USE_ONE_VOP == 1)
         forceSkip = true;
 
@@ -3587,7 +3622,7 @@ int hwc_vop_config(hwcContext * context, hwc_display_contents_1_t *list)
 
    // if(!context->fb_blanked)
     {
-	if (context->IsRk3328)
+	if (context->IsRk3328 || context->IsRk3126 || context->IsRk3128)
 	    hotplug_reset_dstpos(&fb_info, 5);
         else if(context->IsRk322x && context->IsRkBox)
             hotplug_reset_dstpos(&fb_info,2);
diff --git a/rk_hwcomposer.h b/rk_hwcomposer.h
index 87df79a..f7a33da 100755
--- a/rk_hwcomposer.h
+++ b/rk_hwcomposer.h
@@ -81,7 +81,11 @@
 #define VOP_WIN_NUM       2
 #define RGA_USE_FENCE     0
 #define VIDEO_USE_PPROT   0
-#define HOTPLUG_MODE      1
+#ifdef RK312X_BOX
+    #define HOTPLUG_MODE      0
+#else
+    #define HOTPLUG_MODE      1
+#endif
 #define ONLY_USE_ONE_VOP  1
 #define VIDEO_WIN1_UI_DISABLE     1
 #define VIRTUAL_UI_RESOLUTION     0
@@ -426,6 +430,7 @@ FenceMangrRga;
         int      isStereo;
         int      Is_debug;
     	int           iommuEn;
+    	bool     Is_OverscanEn;
         alloc_device_t  *mAllocDev;
         int     *video_ui;
         int rga_fence_relfd[RGA_REL_FENCE_NUM];
diff --git a/rk_hwcomposer_hdmi.cpp b/rk_hwcomposer_hdmi.cpp
deleted file mode 100755
index ade9c2d..0000000
--- a/rk_hwcomposer_hdmi.cpp
+++ /dev/null
@@ -1,148 +0,0 @@
-
-/*
-
-* rockchip hwcomposer( 2D graphic acceleration unit) .
-
-*
-
-* Copyright (C) 2015 Rockchip Electronics Co., Ltd.
-
-*/
-#include <sys/prctl.h>
-#include "rk_hwcomposer_hdmi.h"
-#include <errno.h>
-#include <malloc.h>
-#include <stdlib.h>
-#include <stdarg.h>
-#include <fcntl.h>
-#include <poll.h>
-#include <sys/ioctl.h>
-#include <linux/fb.h>
-#include <sys/mman.h>
-#include <sys/resource.h>
-#include <cutils/log.h>
-#include <cutils/properties.h>
-#include <hardware_legacy/uevent.h>
-#include <hardware/hwcomposer.h>
-
-int         g_hdmi_mode;
-void rk_parse_uevent_buf(const char *buf,int* type,int* flag,int* fbx, int len)
-{
-	const char *str = buf;
-	while(*str){
-        sscanf(str,"SCREEN=%d,ENABLE=%d",type,flag);
-        sscanf(str,"FBDEV=%d",fbx);
-        str += strlen(str) + 1;
-        if (str - buf >= len){
-            break;
-        }
-        //ALOGI("line %d,buf[%s]",__LINE__,str);
-    }
-    ALOGI("SCREEN=%d ENABLE=%d,",*type,*flag);
-
-}
-
-void rk_check_hdmi_state()
-{
-    //int fd = open("/sys/devices/virtual/switch/hdmi/state", O_RDONLY);
-    int fd = open("/sys/devices/virtual/display/HDMI/connect", O_RDONLY);
-    if (fd > 0)
-    {
-        char statebuf[100];
-        memset(statebuf, 0, sizeof(statebuf));
-        int err = read(fd, statebuf, sizeof(statebuf));
-
-        if (err < 0)
-        {
-            ALOGE("error reading vsync timestamp: %s", strerror(errno));
-            return;
-        }
-        close(fd);
-        g_hdmi_mode = atoi(statebuf);
-        /* if (g_hdmi_mode==0)
-        {
-            property_set("sys.hdmi.mode", "0");
-        }
-        else
-        {
-            property_set("sys.hdmi.mode", "1");
-        }*/
-    }
-    else
-    {
-        ALOGD("err=%s", strerror(errno));
-    }
-}
-
-//0,1,2
-void rk_check_hdmi_uevents(const char *buf,int len)
-{
-    //ALOGI("fun[%s],line[%d],buf is [%s]",__FUNCTION__,__LINE__,buf);
-#ifdef USE_X86
-    if(!strcmp(buf, "change@/devices/soc0/e0000000.noc/ef010000.l2_noc/e1000000.ahb_per/vop0"))
-#else
-#ifdef RK322X_BOX
-	if (strstr(buf, "change@/devices/vop"))
-#else
-    if (!strcmp(buf, "change@/devices/virtual/display/HDMI"))
-#endif
-#endif
-    {
-        int type,flag,fbx;
-        type = flag = fbx = -1;
-        rk_check_hdmi_state();
-        rk_parse_uevent_buf(buf,&type,&flag,&fbx,len);
-#ifdef USE_X86
-        if(type == -1 && flag == -1)
-            handle_hotplug_event(g_hdmi_mode,1);
-        else
-#endif
-#ifdef RK322X_BOX
-            handle_hotplug_event(flag,0);
-#else
-            handle_hotplug_event(g_hdmi_mode,0);
-#endif
-    }
-}
-
-void rk_handle_uevents(const char *buff,int len)
-{
-    // uint64_t timestamp = 0;
-    rk_check_hdmi_uevents(buff,len);
-}
-
-void  *rk_hwc_hdmi_thread(void *arg)
-{
-    static char uevent_desc[4096];
-    struct pollfd fds[1];
-    int timeout;
-    int err;
-    prctl(PR_SET_NAME,"HWC_htg");
-    HWC_UNREFERENCED_PARAMETER(arg);
-
-    uevent_init();
-    fds[0].fd = uevent_get_fd();
-    fds[0].events = POLLIN;
-    memset(uevent_desc, 0, sizeof(uevent_desc));
-    do
-    {
-        err = poll(fds, 1, -1);
-        if (err == -1)
-        {
-            if (errno != EINTR)
-                ALOGE("event error: %m");
-            continue;
-        }
-
-        if (fds[0].revents & POLLIN)
-        {
-            int len = uevent_next_event(uevent_desc, sizeof(uevent_desc) - 2);
-            rk_handle_uevents(uevent_desc,len);
-        }
-    }
-    while (1);
-
-    pthread_exit(NULL);
-
-    return NULL;
-}
-- 
1.7.9.5

